-----------------------------------------GIT	Commands---------------------------------------------------------		

git status 						--> prints status of got repository 
git init 						--> initializes the Git Repository
git config --global user.name "Let's Kode It"		-->Specify Username globally
git config --global user.email letskodeit@gmail.com	->Specify Email Globally	
git config user.name "Let's Kode It"			->Specify username for particular repo
git config user.email letskodeit@gmail.com		->Specify email for particular repo
git add							-> Add file to staging env
git commit -m ""					-->Commit fee to local Git Repo
git log							->Check changes made to file w/ existing file
Git diff <filename>					-> Est. connection to the remote GitHub repo
Git push origin master					-> Push to master branch

-----------------------------------------------------------------------------------------------------------------------------------------

Scenario 1: 
Firs Release -> Done 
Second Release 
	2 Features
	2 People
Third Release
	1 Feature 
	1 People 

Scenario 2: 
Two People 

Person A -> Enhance Framework
Person B -> Automating test cases

testMMethod1 -> getName()

Person A -> Merge code to master 
Person B -> Pull from master to private branch, merge code to master

Scenario 3: 
1 Person -> Two different features

	   PrivateBranch1-------------------
	     |				   |				
	     |				   |		
	     |				   |     
----------Master------Release--------Master------------Master--------Release-----------Master--------
	   |							|								
	   |							|Pull and then merge					
	PrivateBranch2-------------------------------------------
